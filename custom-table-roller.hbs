{{!< default}}

{{!-- The tag above means: insert everything in this file
into the {body} tag of the default.hbs template --}}

<style>
    /* Styling for the table roller */
    .table-roller-container {
        margin: 2rem 0;
        padding: 1.5rem;
        background-color: var(--color-darkgrey);
        border-radius: 5px;
        text-align: center;
    }

    .table-roller-button {
        display: inline-block;
        padding: 0.8rem 1.5rem;
        background-color: var(--ghost-accent-color);
        color: #fff;
        border: none;
        border-radius: 4px;
        font-size: 1.2rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .table-roller-button:hover {
        opacity: 0.9;
        transform: translateY(-2px);
    }

    .table-roller-result {
        margin-top: 1.5rem;
        padding: 1rem;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        font-size: 1.2rem;
        min-height: 3rem;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    /* Hide the table in the post content */
    .table-roller-data {
        display: none;
    }
    
    /* Animation for the dice roll */
    @keyframes diceRoll {
        0% { transform: rotate(0deg) scale(1); }
        25% { transform: rotate(90deg) scale(1.2); }
        50% { transform: rotate(180deg) scale(1.4); }
        75% { transform: rotate(270deg) scale(1.2); }
        100% { transform: rotate(360deg) scale(1); }
    }
    
    .rolling {
        display: inline-block;
        animation: diceRoll 0.8s ease-in-out;
    }
    
    /* D20 icon styling */
    .d20-icon {
        display: inline-block;
        width: 24px;
        height: 24px;
        margin-right: 8px;
        vertical-align: middle;
    }

    /* Result animation */
    @keyframes fadeIn {
        0% { opacity: 0; transform: translateY(-10px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    .result-fade-in {
        animation: fadeIn 0.5s ease-out;
    }
</style>

<script>
    // Table roller functionality
    document.addEventListener('DOMContentLoaded', function() {
        const tableRollerButton = document.getElementById('table-roller-button');
        const tableRollerResult = document.getElementById('table-roller-result');
        const tableRollerIcon = document.getElementById('table-roller-icon');
        
        if (tableRollerButton && tableRollerResult) {
            tableRollerButton.addEventListener('click', function() {
                // Extract table data from the hidden markdown table
                const tableData = extractTableData();
                
                if (tableData.length === 0) {
                    tableRollerResult.textContent = 'No table data found. Please add a markdown table to your post.';
                    return;
                }
                
                // Clear previous result and show loading state
                tableRollerResult.textContent = 'Rolling...';
                tableRollerResult.classList.remove('result-fade-in');
                
                // Add rolling animation to the d20 icon
                if (tableRollerIcon) {
                    tableRollerIcon.classList.add('rolling');
                    setTimeout(() => {
                        tableRollerIcon.classList.remove('rolling');
                    }, 800);
                }
                
                // Roll on the table (random selection)
                const randomIndex = Math.floor(Math.random() * tableData.length);
                const result = tableData[randomIndex];
                
                // Display the result with a slight delay and animation
                setTimeout(() => {
                    tableRollerResult.textContent = result;
                    tableRollerResult.classList.add('result-fade-in');
                }, 800);
            });
        }
        
        // Function to extract table data from markdown table
        function extractTableData() {
            const tableData = [];
            const postContent = document.querySelector('.gh-content');
            
            if (postContent) {
                // Find all tables in the post content
                const tables = postContent.querySelectorAll('table');
                
                if (tables.length > 0) {
                    // Use the first table found
                    const table = tables[0];
                    
                    // Get all rows except the header row
                    const rows = table.querySelectorAll('tbody tr');
                    
                    // Extract data from each row
                    rows.forEach(row => {
                        // Get the second column (index 1) if it exists, otherwise get the first column
                        const cells = row.querySelectorAll('td');
                        if (cells.length > 1) {
                            tableData.push(cells[1].textContent.trim());
                        } else if (cells.length > 0) {
                            tableData.push(cells[0].textContent.trim());
                        }
                    });
                }
            }
            
            return tableData;
        }
    });
</script>

{{#post}}
{{!-- Everything inside the #post block pulls data from the post --}}

<main id="site-main" class="site-main">
<article class="article {{post_class}} {{#match @custom.post_image_style "Full"}}image-full{{else match @custom.post_image_style "=" "Small"}}image-small{{/match}}">

    <header class="article-header gh-canvas">
        <h1 class="article-title">{{title}}</h1>

        <div class="byline-meta-content">
            <time class="byline-meta-date" datetime="{{date format="YYYY-MM-DD"}}">{{date format="MMMM YYYY"}}</time>
        </div>

        {{#if custom_excerpt}}
            <p class="article-excerpt">{{custom_excerpt}}</p>
        {{/if}}

        {{#match @custom.post_image_style "!=" "Hidden"}}
        {{#if feature_image}}
            <figure class="article-image">
                <img
                    srcset="{{img_url feature_image size="s"}} 300w,
                            {{img_url feature_image size="m"}} 600w,
                            {{img_url feature_image size="l"}} 1000w,
                            {{img_url feature_image size="xl"}} 2000w"
                    sizes="(min-width: 1400px) 1400px, 92vw"
                    src="{{img_url feature_image size="xl"}}"
                    alt="{{#if feature_image_alt}}{{feature_image_alt}}{{else}}{{title}}{{/if}}"
                />
                {{#if feature_image_caption}}
                    <figcaption>{{feature_image_caption}}</figcaption>
                {{/if}}
            </figure>
        {{/if}}
        {{/match}}
    </header>

    <!-- Table Roller UI -->
    <div class="table-roller-container gh-canvas">
        <button id="table-roller-button" class="table-roller-button">
            <span id="table-roller-icon" class="d20-icon">{{> "icons/d20"}}</span>
            Roll on Table
        </button>
        <div id="table-roller-result" class="table-roller-result">
            Click the button above to roll on the table
        </div>
    </div>

    <section class="gh-content gh-canvas">
        {{content}}
    </section>

    {{#if comments}}
        <section class="article-comments gh-canvas">
            {{comments}}
        </section>
    {{/if}}

</article>
</main>

{{!-- A signup call to action is displayed here, unless viewed as a logged-in member --}}
{{#if @site.members_enabled}}
{{#unless @member}}
{{#unless @site.comments_enabled}}
{{#if access}}
    <section class="footer-cta outer">
        <div class="inner">
            {{#if @custom.email_signup_text}}<h2 class="footer-cta-title">{{@custom.email_signup_text}}</h2>{{/if}}
            <a class="footer-cta-button" href="#/portal" data-portal>
                <div class="footer-cta-input">Enter your email</div>
                <span>Subscribe</span>
            </a>
        </div>
    </section>
{{/if}}
{{/unless}}
{{/unless}}
{{/if}}

{{!-- Read more links, just above the footer --}}
{{#if @custom.show_recent_posts_footer}}
    {{#get "posts" filter="id:-{{id}}" limit="3" as |more_posts|}}
        {{#if more_posts}}
            <aside class="read-more-wrap outer">
                <div class="read-more inner">
                    {{#foreach more_posts}}
                        {{> "post-card"}}
                    {{/foreach}}
                </div>
            </aside>
        {{/if}}
    {{/get}}
{{/if}}

{{/post}}

