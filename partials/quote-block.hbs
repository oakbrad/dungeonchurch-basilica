{{!-- 
    QUOTE BLOCK PARTIAL
    
    This partial creates a stylized quote block that spans the full width of the page.
    
    USAGE:
    {{> "quote-block"}}
    
    To use with a custom quotes list, you can define a custom quotes array in your template before including the partial:
    ```javascript
    <script>
    window.customQuotes = [
        {
            text: "Your quote text here",
            author: "Author Name",
            link: "https://link-to-author-page" (optional)
        },
        // more quotes...
    ];
    </script>
    {{> "quote-block"}}
    ```
    
    If no custom quotes are provided, it will use the default quotes defined below.
--}}

<style>
    /* Quote block styling */
    .map-quote-block {
        position: relative;
        left: 50%;
        width: 100vw;
        max-width: 100vw;           /* never shrink below viewport */
        transform: translateX(-50%);
        box-sizing: border-box;
        padding: 60px 20px 0px;      /* more padding so big quotes have room */
        margin: 40px 0;
        background-color: var(--ghost-accent-color);
        color: white;               /* ensure text is readable on accent bg */
        font-size: 2rem;
        line-height: 1.6;
        font-style: italic;
        text-align: center;
        overflow: hidden !important; /* clip anything that goes outside */
    }

    .map-quote-block p {
        position: relative;         /* bring above pseudo-elements */
        z-index: 2;
        max-width: 800px;
        margin: 0 auto 0.5em;
        overflow: hidden !important;
    }

    .credit-quote-block {
        position: relative;         /* above pseudo-elements too */
        z-index: 2;
        text-align: right !important;
        font-size: 1.5em;
        font-weight: bold;
        font-style: normal;
        margin-top: 1em;
        padding-bottom: 0em;
        font-family: 'Waning Star', serif;
        overflow: hidden !important;
    }

    .credit-quote-block i {
        color: rgba(255, 255, 255, 0.4); /* very low-opacity white */
    }

    .map-quote-block::before {
        content: "\201c";           /* Unicode opening double-quote */
        position: absolute;
        top: 5px;                   /* nudge upward or adjust as needed */
        left: 20px;                 /* nudge inward from left edge */
        font-family: serif;         /* a classic serif for a dramatic look */
        font-size: 12rem;           /* very large */
        line-height: 1;
        color: rgba(255, 255, 255, 0.4); /* very low-opacity white */
        z-index: 1;                 /* sit behind the <p> text (which is z-index:2) */
        pointer-events: none;       /* never capture clicks */
    }

    .map-quote-block::after {
        content: "\201d";           /* Unicode closing double-quote */
        position: absolute;
        bottom: -20px;              /* slight nudge downward */
        right: 20px;                /* slight nudge inward from right edge */
        font-family: serif;
        font-size: 12rem;
        line-height: 1;
        color: rgba(255, 255, 255, 0.4);
        z-index: 1;
        pointer-events: none;
    }
</style>

{{!-- Quote block that spans full width --}}
<div class="map-quote-block">
    <p id="quote-text">Ticklecorn</p>
    <p class="credit-quote-block"><i>&mdash;</i> <a id="quote-link" href="#" target="_new"><span id="quote-author">Meepo</span></a></p>
</div>

{{!-- Script for random quotes --}}
<script>
    // Default quotes array
    const defaultQuotes = [
        {
            text: "Ticklecorn",
            author: "Meepo",
            link: "#"
        }
    ];

    // Use passed quotes array or default to the predefined quotes
    const quotes = (typeof window.customQuotes !== 'undefined') ? window.customQuotes : defaultQuotes;

    // Set random quote on page load
    document.addEventListener('DOMContentLoaded', function() {
        // Only run if the quote elements exist on the page
        if (document.getElementById('quote-text')) {
            const quote = quotes[Math.floor(Math.random() * quotes.length)];
            document.getElementById('quote-text').textContent = quote.text;
            document.getElementById('quote-author').textContent = quote.author;
            
            // Set the link if it exists
            if (quote.link && document.getElementById('quote-link')) {
                document.getElementById('quote-link').href = quote.link;
            } else if (document.getElementById('quote-link')) {
                // If no link, make the author text without a link
                const authorSpan = document.getElementById('quote-author');
                const linkElement = document.getElementById('quote-link');
                const parentElement = linkElement.parentNode;
                
                parentElement.replaceChild(authorSpan, linkElement);
            }
        }
    });
</script>
